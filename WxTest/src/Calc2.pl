#!/usr/bin/perl -w -- 
#
# generated by wxGlade 0.9.0b2 on Sun Dec 16 18:27:24 2018
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx qw[:allclasses];
use strict;



# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package CalculatorFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: CalculatorFrame::new
    $style = wxDEFAULT_FRAME_STYLE
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->SetSize(Wx::Size->new(476, 488));
    $self->{notebook_1} = Wx::Notebook->new($self, wxID_ANY);
    $self->{notebook_1_pane_2} = Wx::Panel->new($self->{notebook_1}, wxID_ANY);
    $self->{text_ctrl_1} = Wx::TextCtrl->new($self->{notebook_1_pane_2}, wxID_ANY, "");
    $self->{radiobox_operator} = Wx::RadioBox->new($self->{notebook_1_pane_2}, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, ["+", "-", "*", "/"], 1, wxRA_SPECIFY_ROWS);
    $self->{text_ctrl_2} = Wx::TextCtrl->new($self->{notebook_1_pane_2}, wxID_ANY, "");
    $self->{text_result} = Wx::TextCtrl->new($self->{notebook_1_pane_2}, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);
    $self->{button_execute} = Wx::Button->new($self->{notebook_1_pane_2}, wxID_ANY, "Execute");
    $self->{button_reset} = Wx::Button->new($self->{notebook_1_pane_2}, wxID_ANY, "Reset");
    $self->{notebook_1_Log} = Wx::Panel->new($self->{notebook_1}, wxID_ANY);
    $self->{text_ctrl_3} = Wx::TextCtrl->new($self->{notebook_1_Log}, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);

    $self->__set_properties();
    $self->__do_layout();

    Wx::Event::EVT_BUTTON($self, $self->{button_execute}->GetId, $self->can('on_button_pressed'));

    # end wxGlade
    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: CalculatorFrame::__set_properties
    $self->SetTitle("Calculator");
    $self->{radiobox_operator}->SetSelection(0);
    $self->{text_result}->SetBackgroundColour(Wx::Colour->new(212, 208, 200));
    $self->{button_execute}->SetDefault();
    $self->{text_ctrl_3}->SetBackgroundColour(Wx::Colour->new(212, 208, 200));
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: CalculatorFrame::__do_layout
    $self->{sizer_1} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_8} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_7} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{grid_sizer_1} = Wx::FlexGridSizer->new(4, 2, 5, 10);
    my $label_1 = Wx::StaticText->new($self->{notebook_1_pane_2}, wxID_ANY, "Value 1:");
    $self->{grid_sizer_1}->Add($label_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    $self->{grid_sizer_1}->Add($self->{text_ctrl_1}, 1, wxEXPAND, 0);
    my $label_4 = Wx::StaticText->new($self->{notebook_1_pane_2}, wxID_ANY, "Operator:");
    $self->{grid_sizer_1}->Add($label_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    $self->{grid_sizer_1}->Add($self->{radiobox_operator}, 0, 0, 0);
    my $label_2 = Wx::StaticText->new($self->{notebook_1_pane_2}, wxID_ANY, "Value 2:");
    $self->{grid_sizer_1}->Add($label_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    $self->{grid_sizer_1}->Add($self->{text_ctrl_2}, 1, wxEXPAND, 0);
    my $label_3 = Wx::StaticText->new($self->{notebook_1_pane_2}, wxID_ANY, "Result:");
    $self->{grid_sizer_1}->Add($label_3, 0, 0, 0);
    $self->{grid_sizer_1}->Add($self->{text_result}, 1, wxEXPAND, 0);
    $self->{grid_sizer_1}->AddGrowableRow(3);
    $self->{grid_sizer_1}->AddGrowableCol(1);
    $self->{sizer_2}->Add($self->{grid_sizer_1}, 1, wxEXPAND, 0);
    $self->{sizer_7}->Add($self->{button_execute}, 0, wxALL, 5);
    $self->{sizer_7}->Add($self->{button_reset}, 0, wxALL, 5);
    $self->{sizer_2}->Add($self->{sizer_7}, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    $self->{notebook_1_pane_2}->SetSizer($self->{sizer_2});
    $self->{sizer_8}->Add($self->{text_ctrl_3}, 1, wxEXPAND, 0);
    $self->{notebook_1_Log}->SetSizer($self->{sizer_8});
    $self->{notebook_1}->AddPage($self->{notebook_1_pane_2}, "Calculate");
    $self->{notebook_1}->AddPage($self->{notebook_1_Log}, "Log");
    $self->{sizer_1}->Add($self->{notebook_1}, 1, wxEXPAND, 0);
    $self->SetSizer($self->{sizer_1});
    $self->Layout();
    # end wxGlade
}


sub on_button_pressed {
    my ($self, $event) = @_;
    
    my $result = 0;
    my $value1 = $self->{text_ctrl_1}->GetValue();
    my $value2 = $self->{text_ctrl_2}->GetValue();
    my $operator = $self->{radiobox_operator}->GetSelection(); # a number from 0 to 3
        if ($operator == 0) {$result = $value1 + $value2}
        elsif ($operator == 1) {$result = $value1 - $value2}
        elsif ($operator == 2) {$result = $value1 * $value2}
        elsif ($operator == 3) {$result = $value1 / $value2}
        $self->{text_result}->AppendText($result);
    
    # wxGlade: CalculatorFrame::on_button_pressed <event_handler>
    #warn "Event handler (on_button_pressed) not implemented";
    
    my($status, $output) = Wx::ExecuteCommand("notepad.exe test.txt");
    #my @cmd = ("notepad.exe","");
    #run \@cmd;
    
    #$event->Skip;
    # end wxGlade
}

# end of class CalculatorFrame

1;

package MyApp;

use base qw(Wx::App);
use strict;

sub OnInit {
    my( $self ) = shift;

    Wx::InitAllImageHandlers();

    my $frame = CalculatorFrame->new();

    $self->SetTopWindow($frame);
    $frame->Show(1);

    return 1;
}
# end of class MyApp

package main;

unless(caller){
    my $app = MyApp->new();
    $app->MainLoop();
}
